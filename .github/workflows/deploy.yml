name: Deploy Automatizado

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Build da imagem Docker (backend)
        run: docker build -t ellen25/backend ./backend

      - name: Build da imagem Docker (frontend)
        run: docker build -t ellen25/frontend ./frontend

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push backend para Docker Hub
        run: docker push ellen25/backend

      - name: Push frontend para Docker Hub
        run: docker push ellen25/frontend

      - name: Copiar código para o servidor
        uses: appleboy/scp-action@v0.1.4
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./"
          target: "/home/aluno/project"

      - name: Subir SonarQube no servidor
        uses: appleboy/ssh-action@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop sonar || true
            docker rm sonar || true
            docker run -d --name sonar -p 8263:9000 sonarqube
            echo "Aguardando SonarQube iniciar completamente..."
            for i in {1..30}; do
              STATUS=$(curl -s http://localhost:9000/api/system/status | grep -oP '"status":"\K[^"]+')
              if [ "$STATUS" = "UP" ]; then
                echo "SonarQube está pronto!"
                break
              fi
              echo "Status atual: $STATUS — aguardando..."
              sleep 5
            done

      - name: Rodar análise SonarQube (backend)
        uses: appleboy/ssh-action@v1.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker run --rm \
              --network host \
              -e SONAR_HOST_URL="http://localhost:9000" \
              -e SONAR_LOGIN="$SONAR_TOKEN" \
              -v /home/aluno/project/backend:/usr/src \
              -w /usr/src \
              sonarsource/sonar-scanner-cli \
              -Dsonar.projectKey=backend \
              -Dsonar.sources=.

      - name: Rodar análise SonarQube (frontend)
        uses: appleboy/ssh-action@v1.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker run --rm \
              --network host \
              -e SONAR_HOST_URL="http://localhost:9000" \
              -e SONAR_LOGIN="$SONAR_TOKEN" \
              -v /home/aluno/project/frontend:/usr/src \
              -w /usr/src \
              sonarsource/sonar-scanner-cli \
              -Dsonar.projectKey=frontend \
              -Dsonar.sources=.

      - name: Parar SonarQube
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop sonar || true
            docker rm sonar || true

      - name: Deploy backend
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop backend || true
            docker rm backend || true
            docker pull ellen25/backend
            docker run -d --name backend -p 8261:3000 ellen25/backend

      - name: Deploy frontend
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 201.23.3.86
          username: aluno
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop frontend || true
            docker rm frontend || true
            docker pull ellen25/frontend
            docker run -d --name frontend -p 8260:80 ellen25/frontend
